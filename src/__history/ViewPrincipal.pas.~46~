unit ViewPrincipal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MSSQL,
  FireDAC.Phys.MSSQLDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, Vcl.StdCtrls, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs, Filectrl,
  FireDAC.Phys.SQLiteWrapper.Stat, Convert4Delphi, FireDAC.Comp.BatchMove.SQL,
  FireDAC.Comp.BatchMove, FireDAC.Comp.BatchMove.DataSet, FireDAC.Comp.UI;

type
  TForm1 = class(TForm)
    ConexaoSQLServer: TFDConnection;
    QryExport: TFDQuery;
    Button1: TButton;
    Button2: TButton;
    QryImport: TFDQuery;
    Button3: TButton;
    Button4: TButton;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);


  private

  public

  end;

function SelecionaCaminho(ANomeArquivo: String): String;

var
  Form1: TForm1;
  ACaminho: String;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
  SelecionaCaminho('Exportacao.txt');

  QryExport.SQL.Text := 'Select xcd_int_produtos_servicos, xcodigo_barra from tb_produtos_servicos';
  QryExport.Open();
  QryExport.FetchAll;
  TConverter4Delphi.New.Exportar(QryExport, ACaminho);
end;

procedure TForm1.Button2Click(Sender: TObject);
begin
  ConexaoSQLServer.Connected := true;
end;

procedure TForm1.Button3Click(Sender: TObject);
begin
  SelecionaCaminho('Importacao.txt');

  QryImport.Open();
  QryImport.FetchAll;
  TConverter4Delphi.New.Importar(QryImport, ACaminho);
end;

procedure TForm1.Button4Click(Sender: TObject);
begin
  TConverter4Delphi.New.TabelaTabela(ConexaoSQLServer, ConexaoSQLServer, 'tncm2', 'tncm');
end;

function SelecionaCaminho(ANomeArquivo: String): String;
Begin
  Try
    SelectDirectory('Selecione caminho da exportação', '', ACaminho);
    ACaminho := ACaminho + '\' + ANomeArquivo;

    if FileExists(ACaminho) then
      Begin
        if MessageDlg('Arquivo já existe e será apagado! '+ #13 +'Deseja prosseguir?', mtConfirmation,
          [mbYes, mbNo], 0) = mrYes then
          begin
             DeleteFile(ACaminho);
          end;
      End;

  Finally
    Result := ACaminho;
  End;
End;

end.
